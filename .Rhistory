knitr::opts_chunk$set(echo = TRUE)
packages <- c(
'ggplot2',
'ggrepel',
'patchwork',
'ggraph',
'dplyr',
'patchwork',
'gganimate',
'gifski',
'ggrepel',
'ggforce',
'ggraph',
'ggthemes',
'maps',
'sf',
'tidyr',
'concaveman',
'remotes'
)
# Uncomment the next lines (remove the first #) to install the packages
install.packages(packages)
data("faithful")
# Basic scatterplot
ggplot(data = faithful,
mapping = aes(x = eruptions, y = waiting)) +
geom_point()
title: "ggplot2 examples and exercises"
output: html_document
data("faithful")
ggplot(data = faithful,
mapping = aes(x = eruptions, y = waiting)) +
geom_point()
ggplot(data = faithful,
mapping = aes(x = eruptions, y = waiting)) +
geom_point()
library(ggplot2)
library(ggplot2)
data("faithful")
# Basic scatterplot
ggplot(data = faithful,
mapping = aes(x = eruptions, y = waiting)) +
geom_point()
# Data and mapping can be given both as global (in ggplot()) or per layer
ggplot() +
geom_point(mapping = aes(x = eruptions, y = waiting),
data = faithful)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting, colour = eruptions < 3))
```{r}
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting),
colour = 'steelblue')
ggplot(faithful) +
geom_histogram(aes(x = eruptions))
ggplot(faithful, aes(x = eruptions, y = waiting)) +
geom_density_2d() +
geom_point()
?geom_point
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting))
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting), shape = 'square')
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting), shape = 'square', alpha = 0.4)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting), shape = 'square', alpha = 0.8)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting), shape = 'square', alpha = 0.4)
ggplot(faithful) +
geom_histogram(aes(x = eruptions))
ggplot(faithful) +
geom_histogram(aes(x = eruptions), colour = eruptions < 3.1)
ggplot(faithful) +
geom_histogram(aes(x = eruptions), color = eruptions < 3.1)
ggplot(faithful) +
geom_histogram(aes(x = eruptions), colour = 'eruptions' < 3.1)
ggplot(faithful) +
geom_histogram(aes(x = eruptions), colour = 'eruptions' < 3.1)
ggplot(faithful) +
geom_histogram(aes(x = eruptions), colour = eruptions < 3.1)
ggplot(faithful) +
geom_histogram(aes(x = eruptions, colour = eruptions < 3.1))
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = eruptions < 3.1))
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60))
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = stack)
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'stack')
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'identity')
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'identity', alpha = 0.5)
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'stack', alpha = 0.5)
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'identity', alpha = 0.5)
ggplot(faithful) +
geom_histogram(aes(x = eruptions, fill = waiting < 60), position = 'dodge', alpha = 0.5)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting)) +
geom_abline(slope = -40 , intercept = 300)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting)) +
geom_abline(slope = -40 , intercept = 200)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting)) +
geom_abline(slope = -40 , intercept = 190)
ggplot(faithful) +
geom_point(aes(x = eruptions, y = waiting)) +
geom_abline(slope = -40 , intercept = 195)
data("mpg")
ggplot(mpg) +
geom_bar(aes(x = class))
library(dplyr)
mpg_counted <- mpg %>%
count(class, name = 'count')
ggplot(mpg_counted) +
geom_bar(aes(x = class, y = count), stat = 'identity')
ggplot(mpg_counted) +
geom_col(aes(x = class, y = count))
ggplot(mpg) +
geom_bar(aes(x = class, y = after_stat(100 * count / sum(count))))
y
ggplot(mpg) +
geom_density(aes(x = hwy))
ggplot(mpg) +
geom_density(aes(x = hwy, y = after_stat(scaled)))
ggplot(mpg) +
geom_bar(aes(x = class))
ggplot(mpg) +
stat_count(aes(x = class))
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean)
?stat_summary
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 3)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 1.2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 0.6)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 0.6)
stat_summary(aes(x = class, y = hwy), fun = median, goem = 'point', colour = 'blue', size = 0.6)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 0.6) +
stat_summary(aes(x = class, y = hwy), fun = median, goem = 'point', colour = 'blue', size = 0.6)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, goem = 'point', colour = 'red', size = 0.6, alpha = 0.5) +
stat_summary(aes(x = class, y = hwy), fun = median, goem = 'point', colour = 'blue', size = 0.6, alpha = 0.5)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, geom = 'point', colour = 'red', size = 0.6, alpha = 0.5) +
stat_summary(aes(x = class, y = hwy), fun = median, geom = 'point', colour = 'blue', size = 0.6, alpha = 0.5)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2) +
stat_summary(aes(x = class, y = hwy), fun = mean, geom = 'point', colour = 'red', size = 2, alpha = 0.5) +
stat_summary(aes(x = class, y = hwy), fun = median, geom = 'point', colour = 'blue', size = 2, alpha = 0.5)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
scale_x_continuous(breaks = c(3, 5, 6)) +
scale_y_continuous(trans = 'log10')
RColorBrewer::display.brewer.all()
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'spectral')
qual
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'qual')
RColorBrewer::display.brewer.all()
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(palette = 'Spectral')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(palette = 'Spectral')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size_area(breaks = c(4, 5, 6, 8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size(breaks = c(4, 5, 6, 8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size_area(breaks = c(4, 5, 6, 8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(colour = legend)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(colour = 'legend')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(colour = 'cty')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
guides(colour = 'legend')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(colour = 'legend')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales = 'free')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales = 'free_y')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales = 'free_x')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales = 'free')
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ .)
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., space = 'free_y', scales = 'free_y')
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., space = 'free', scales = 'free_y')
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., space = 'free_y', scales = 'free_y')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv + year)
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar()
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar(theta = 'y') +
expand_limits(y = 70)
ggplot(mpg) +
geom_bar(aes(x = class)) +
scale_y_continuous(limits = c(0, 40))
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_cartesian(ylim = c(0, 40))
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ)) +
scale_y_continuous(trans = 'log10')
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ)) +
scale_y_continuous(trans = 'log10') +
coord_trans(trans = 'log10')
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ)) +
scale_y_continuous(trans = 'log10') +
coord_trans('log10')
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ)) +
coord_trans(y= 'log10')
# Get the borders of all countries
world <- sf::st_as_sf(maps::map('world', plot = FALSE, fill = TRUE))
world <- sf::st_wrap_dateline(world,
options = c("WRAPDATELINE=YES", "DATELINEOFFSET=180"),
quiet = TRUE)
# Plot code
ggplot(world) +
geom_sf() +
coord_sf(crs = "+proj=moll")
# Get the borders of all countries
world <- sf::st_as_sf(maps::map('world', plot = FALSE, fill = TRUE))
world <- sf::st_wrap_dateline(world,
options = c("WRAPDATELINE=YES", "DATELINEOFFSET=180"),
quiet = TRUE)
# Plot code
ggplot(world) +
geom_sf() +
coord_sf(crs = "+proj=robin")
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
theme_minimal()
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
labs(title = "Number of car models per class",
caption = "source: http://fueleconomy.gov",
x = NULL,
y = NULL) +
scale_x_continuous(expand = c(0, NA)) +
theme_minimal() +
theme(
text = element_text('Avenir Next Condensed'),
strip.text = element_text(face = 'bold', hjust = 0),
plot.caption = element_text(face = 'italic'),
panel.grid.major = element_line('white', size = 0.5),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
panel.ontop = TRUE
)
ggplot(mpg) +
geom_bar(aes(y = class, fill = drv)) +
facet_wrap(~year) +
labs(title = "Number of car models per class",
caption = "source: http://fueleconomy.gov",
x = 'Number of cars',
y = NULL)
?theme
